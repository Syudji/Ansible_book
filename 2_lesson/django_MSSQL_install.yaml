- - -
  - ad-hoc commands
    Конфигурация app серверов
     ansible app -b -m yum -a "name=MySQL-python state=present" 
     ansible app -b -m yum -a "name=python-setuptools state=present"    
     ansible app  -b -m yum -a "name=django state=present"               
     ansible app -a "python -c 'import django; print django.get_version'" 

    #  ansible app -b -m yum -a "name=MySQL-python state=present"      # app это зона которая прописана в inventory  -b become(sudo); -m module = yum; далее -a "Имя пакета и его версия" 
    #  ansible app -b -m yum -a "name=python-setuptools state=present" #   -a --args дополнительно позволяет использовать секции "значение=переменная" по правилам языка yaml как plabook
    #  ansible app  -b -m yum -a "name=django state=present"               
    #  ansible app -a "python -c 'import django; print django.get_version'" #
    
    
    # Конфигураця db сервера
    
  - ansible db -b -m yum -a "name=mariadb-server state=present" # Установка mariaDB server  версия текущая
  - ansible db -b -m service -a "name=mariadb state=started enabled=yes" # Модуль service, состояние запуск, enable-автозагрузка =да
  - ansible-inventory --graph # Отображение списка содержимого инвентори файла, графиком 
  - ansible  db -b -a "iptables -F" # Правило Iptables для -
  - ansible db -b -a "iptables -A INPUT -s 192.168.60.0/24 -p tcp -m tcp --dport 3306 -j ACCEPT" # Открытия доступа по порту 3306 

   # устанковка MySQL-python
  - ansible db -b -m yum -a "name=MySQL-python state=present" 
  - ansible db -b -m mysql_user -a "name=django host=% password=12345 priv=*.*:ALL state=present" # создание пользователя базы данных делегирование прав и установка пароля

  

  



